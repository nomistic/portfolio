<?php

namespace App\Form;

use App\Entity\Client;
use App\Entity\Format;
use App\Entity\Subject;
use App\Entity\Type;
use App\Entity\Platform;
use App\Repository\SubjectRepository;
use App\Repository\ClientRepository;
//use Doctrine\DBAL\Types\DateType;
use App\Repository\TypeRepository;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use App\Entity\Work;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;



class SearchWorkType extends AbstractType
{

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options); // TODO: Change the autogenerated stub

        $work = new Work();

        $builder
//            ->add('client_id', EntityType::class, array(
//                    'attr' => array('class' => 'form-control'),
//                    'class' => Client::class,
//                    'query_builder' => function(ClientRepository $er) {
//                        return $er->createQueryBuilder('c')
//                            ->orderBy('c.name', 'ASC');
//                    },
//                    'label' => 'Client',
//                    'placeholder' => 'Choose a client',
//
//                )
//
//            )


//            ->add('ghost_ind', CheckboxType::class, [
//                'label'    => 'Ghosted  ',
//                'required' => false,
//            ])

            ->add('type', EntityType::class, array(
                'attr' => array('class' => 'form-control'),
                'class' => Type::class,
                'label' => 'Type',
                //'placeholder' => 'Choose a type',
                'query_builder' => function(TypeRepository $er){
                        return $er->createQueryBuilder('t')
                            ->orderBy('t.name', 'ASC');
                    },

            ))




            ->add('save', SubmitType::class, array(
                'label' => 'Search',
                'attr' => array('class' => 'btn btn-primary mt-3')
            ))
            ->getForm();

    }

}